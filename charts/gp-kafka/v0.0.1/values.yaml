# Environment values
environment:
  parentName: sandbox
  modifierValue: ""

kafkaConnect:
  host: localhost
  port: 8083
  nodePort: 31083
  targetPort: 8083

rawSourceDatabase:
  host: host.docker.internal
  port: 5432
  name: gitprime
  user: ""
  pw: ""
  incrementingPollIntervalMS: 10000

sinkDatabase:
  host: host.docker.internal
  port: 5432
  name: octocat
  user: ""
  pw: ""
  incrementingPollIntervalMS: 10000

# Values for cp-helm-charts to deploy Kafka and kafka-connect
cp-helm-charts:
  cp-kafka:
    brokers: 2
    configurationOverrides:
      offsets.topic.replication.factor: "2"
      "advertised.listeners": |-
        EXTERNAL://${HOST_IP}:$((31090 + ${KAFKA_BROKER_ID}))
    nodeport:
      enabled: true
  cp-kafka-rest:
    external.enabled: true
  cp-kafka-connect:
    configurationOverrides:
      "key.converter": "org.apache.kafka.connect.json.JsonConverter"
      "value.converter": "org.apache.kafka.connect.json.JsonConverter"
      "config.storage.replication.factor": "2"
      "offset.storage.replication.factor": "2"
      "status.storage.replication.factor": "2"
    podAnnotations:
      ad.datadoghq.com/cp-kafka-connect-server.check_names: '["jmx", "kafka"]'
      ad.datadoghq.com/cp-kafka-connect-server.dashboard.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      ad.datadoghq.com/cp-kafka-connect-server.instances: '[{"jmx_url": "service:jmx:rmi:///jndi/rmi://gp-kafka-cp-kafka-connect-jmx.kafka:5555/jmxrmi"}]'
# Control whether other cp-helm-charts are part of this deployment.
# See https://github.com/confluentinc/cp-helm-charts/issues/224 for discussion about why
# these are at the root level and not parented by cp-helm-charts
cp-schema-registry:
  enabled: true
cp-kafka-rest:
  enabled: true
cp-ksql-server:
  enabled: false
cp-control-center:
  enabled: false
