# Environment values
environment:
  parentName: sandbox
  modifierValue: ""

kafkaConnect:
  host: localhost
  port: 8083
  nodePort: 31083
  targetPort: 8083

rawSourceDatabase:
  host: host.docker.internal
  port: 5432
  name: gitprime
  user: ""
  pw: ""
  incrementingPollIntervalMS: 10000

sinkDatabase:
  host: host.docker.internal
  port: 5432
  name: octocat
  user: ""
  pw: ""
  incrementingPollIntervalMS: 10000

# Values for cp-helm-charts to deploy Kafka and kafka-connect
cp-helm-charts:
  cp-kafka:
    brokers: 2
    configurationOverrides:
      offsets.topic.replication.factor: "2"
      "advertised.listeners": |-
        EXTERNAL://${HOST_IP}:$((31090 + ${KAFKA_BROKER_ID}))
    nodeport:
      enabled: true
  cp-kafka-rest:
    external.enabled: true
  cp-kafka-connect:
    configurationOverrides:
      "key.converter": "org.apache.kafka.connect.json.JsonConverter"
      "value.converter": "org.apache.kafka.connect.json.JsonConverter"
      "config.storage.replication.factor": "2"
      "offset.storage.replication.factor": "2"
      "status.storage.replication.factor": "2"
    podAnnotations:
      ad.datadoghq.com/kafka-connect.logs: '[{"log_processing_rules":[{"name":"exclude_noise_for_committing_offsets","pattern":"Committing offsets","type":"exclude_at_match"},{"name":"exclude_noise_for_empty_flushing","pattern":"flushing 0 outstanding messages for offset commit","type":"exclude_at_match"},{"name":"new_log_start_with_date","pattern":"\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])\\s\\d{2}:\\d{2}:\\d{2}","type":"multi_line"}],"path":"/var/log/kafka/server.log","service":"gp-kafka-cp-kafka-connect","source":"kafka","sourcecategory":"connect","tags":["env:sandbox"],"type":"file"}]'
      # label for existing template on file
      ad.datadoghq.com/kafka-connect.check_names: '["gp-kafka-connect-5bd9d9dd6c"]'
      ad.datadoghq.com/kafka-connect.init_configs: '[{"collect_default_metrics":false,"conf":[{"include":{"attribute":{"incoming-byte-rate":{"alias":"jmx.kafka.connect.incoming_byte_rate","metric_type":"gauge"},"outgoing-byte-rate":{"alias":"jmx.kafka.connect.outgoing_byte_rate","metric_type":"gauge"}},"bean_regex":"kafka.connect:type=connect-metrics,client-id=([-.\\w]+)","exclude_tags":["name"]}},{"include":{"attribute":["connector-count","connector-startup-attempts-total","connector-startup-success-total","connector-startup-success-percentage","connector-startup-failure-total","connector-startup-failure-percentage","task-startup-attempts-total","task-startup-success-total","task-startup-success-percentage","task-startup-failure-total","task-startup-failure-percentage"],"bean":"kafka.connect:type=connect-worker-metrics","exclude_tags":["name"]}},{"include":{"attribute":{"batch-size-avg":{"metric_type":"rate"},"offset-commit-avg-time-ms":{"metric_type":"rate"},"running-ratio":{"metric-type":"rate"},"status":{"metric_type":"gauge","values":{"destroyed":3,"failed":2,"paused":1,"running":0,"unassigned":-1}}},"bean_regex":"kafka.connect:type=connector-task-metrics,connector=([-.\\w]+),task=([-.\\w]+)","exclude_tags":["name"]}}],"is_jmx":true}]'
      ad.datadoghq.com/kafka-connect.instances: '[{"jmx_url":"service:jmx:rmi:///jndi/rmi://%%host%%:5555/jmxrmi","name":"gp-kafka-cp-kafka-connect","tags":["kafka:connect","env:sandbox","app:cp-kafka-connect"]}]'
# Control whether other cp-helm-charts are part of this deployment.
# See https://github.com/confluentinc/cp-helm-charts/issues/224 for discussion about why
# these are at the root level and not parented by cp-helm-charts
cp-schema-registry:
  enabled: true
cp-kafka-rest:
  enabled: true
cp-ksql-server:
  enabled: false
cp-control-center:
  enabled: false
